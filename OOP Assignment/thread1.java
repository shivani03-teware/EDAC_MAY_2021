//1).Defining thread by extending thread class

//import  java.util.*;
/*
//Define thread 
class mythread extends Thread{

public void run(){ //override the run method which is in the thread class

System.out.println("child method"); //executed by child thread
}
}
public class thread1 {

public static void main(String args[]){
//now only one thread is there i.e main thread only.
mythread t = new mythread(); // instantiation  a thread
t.start(); // thread start 
//After starting a thread their is two threads are created main thread and child thread.
//1.main thread is excuting reamaning portion of the program.
//2.child thread execute the child thread.
System.out.println("main thread");
}
}
*/

/*
//........Thread Override..........
class mythread extends Thread
{
	public void run() //override 
	{

		System.out.println("child thread");
	}
	public void run(int i) //overload
	{
		System.out.println("child1 thread");
	}
}
public class thread1{
	public static void main(String args[]){
		mythread t = new mythread();
		t.start();
		System.out.println("main thread");
	}
}
*/

/*
class Thread
{
	run(){}
	start(){ register the new thread ,
	to do mandetory things ,
	lastly call run() method which is present in child class or Thread clss run()}
	
}
*/
/*
class mythread extends Thread
{
	public void run()
	{
		System.out.println("child thread");
	}	
	public void start()
	{
		super.start();	
		System.out.println("In strat() ");
	}
}
public class thread1{
	public static void main(String args[]){
		mythread t = new mythread();
		t.start();
		System.out.println("main thread");
	}
}
*/
//2).Defining thread by implementing runnable interface
import java.lang.*;
/*
class myrunnable implements Runnable{
	public void run(){
		System.out.println("child thread");
	}
}
public class thread1{
	public static void main(String args[]){
		myrunnable r = new myrunnable();
		Thread t = new Thread(r);// 'r' myrunnable run() method call
		t.start();
		System.out.println("main thread"); // executed by main thread
	}
}
*/
/*
//.....................Constructor................
class mythread extends Thread{
	public void run(){
		System.out.println("child thread");
	}
}
public class thread1{
	public static void main(String args[]){
		mythread t = new mythread();
		Thread t1 = new Thread(t); // Thread  Constructor 
		t1.start();
		System.out.println("main thread");
	}
}
*/
/*
//....................Get and set a thread method............
class mythread extends Thread{
	public void run(){
	}
}
public class thread1{
	public static void main(String args[]){
		System.out.println(Thread.currentThread().getName()); //explicitly generated by programmer i.e o/p- (main) 
		mythread t = new mythread();
		System.out.println(t.getName());// default thread will be called. o/p -Thread-0
		Thread.currentThread().setName("Other Main"); // set a thread or change thread name by programmer.
		System.out.println(Thread.currentThread().getName());
		
	}
}*/
//..............example....................
class mythread extends Thread{
	public void run(){
		System.out.println("Run method executed by thread  "+Thread.currentThread().getName());

	}
}
public class thread1{
	public static void main(String args[]){
		
		mythread t = new mythread();
		t.start();
		System.out.println("main method executed by thread  "+Thread.currentThread().getName());
		
		
	}
}
		